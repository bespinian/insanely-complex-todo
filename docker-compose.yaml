services:
  traefik:
    image: "traefik:v3.1"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--ping.entrypoint=traefik"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/usr/bin/wget -O- --tries=1 --quiet 127.0.0.1:8080/ping"]
      start_period: 5s
      start_interval: 1s
    ports:
      - "8000:80" # Our entrypoint
      - "8080:8080" # Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - default
      - internal

  frontend:
    build:
      context: frontend
      target: build
    command: [ "npm", "run",  "dev", "--", "--host" ]
    volumes:
      - ./frontend:/app
      - /app/node_modules
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"
    networks:
      - internal

  tasks:
    build:
      context: backend/tasks
      target: build
    command: ["gow", "-c", "-e=go,mod,sum,env,toml", "run", "."]
    volumes:
      - ./backend/tasks:/app
    environment:
      - MONGODB_URI=mongodb://mongo
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/usr/bin/wget -O- --tries=1 --quiet 127.0.0.1:3000/readyz"]
      start_period: 5s
      start_interval: 1s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tasks.rule=PathPrefix(`/api/tasks`)"
      - "traefik.http.routers.tasks.entrypoints=web"
      - "traefik.http.services.tasks.loadbalancer.server.port=3000"
    networks:
      - internal

  mongo:
    image: mongo:8.0
    restart: always
    networks:
      - internal
    volumes:
      - mongo_data:/data/db

volumes:
  mongo_data: {}

networks:
  default: {}
  internal:
    external: false
